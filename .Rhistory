knitr::kable(
caption =  "Summary of studies sampling",
format = "latex", booktabs = T, linesep = "", label = "sampling") %>%
kableExtra::kable_styling(latex_options = c("scale_down", "hold_position"),
font_size = base_font_size - 2) %>%
kableExtra::row_spec(0, bold = TRUE) %>%
kableExtra::column_spec(1, width = "8em") %>%
kableExtra::column_spec(2, width = "12em")  %>%
kableExtra::column_spec(3, width = "30em") %>%
kableExtra::landscape()
readxl::read_excel("studies_info.xlsx", sheet = "sample") %>%
dplyr::select("Study" = "country",
"Geographic scope", "Sampling methodology", "Survey modality", "Weights") %>%
knitr::kable(caption =  "Summary of studies design") %>%
kableExtra::kable_styling(latex_options = c("scale_down"), full_width = FALSE)
# Prep levels
main_results <-
df2 %>%
dplyr::filter(dplyr::if_all(c(take_vaccine_num, cluster, weight), ~ !is.na(.))) %>%
dplyr::nest_by(group) %>%
dplyr::summarize(
lm_helper(data = data,
formula = take_vaccine_num ~ 1, cluster = cluster,
weight = weight, se_type = "stata"),
.groups = "drop")
# Gender
acc_by_gender <- grp_analysis(df2, y = "take_vaccine_num", x = "gender")
# Education (all original categories and binary recoding)
acc_by_educ        <- grp_analysis(df2, y = "take_vaccine_num", x = "educ")
acc_by_educ_binary <- grp_analysis(df2, y = "take_vaccine_num", x = "educ_binary")
# Age (all original categories and binary recoding)
# acc_by_age <- grp_analysis(df2, y = "take_vaccine_num", x = "age_groups")
acc_by_age_binary <- grp_analysis(df2, y = "take_vaccine_num", x = "age_groups_binary")
# Put them together in a single df. Make estimates "percentages" and round
ans <-
dplyr::bind_rows(
main_results %>% mutate(cat = "All", var = "All"),
acc_by_gender %>% rename(cat = gender) %>% mutate(var = "By gender"),
acc_by_educ_binary %>% rename(cat = educ_binary) %>% mutate(var = "By education"),
acc_by_age_binary %>% rename(cat = age_groups_binary) %>% mutate(var = "By age")) %>%
dplyr::mutate(across(c(conf.low, conf.high, estimate), ~ round(. * 100, digits = 1)))
# Join with a tags df, which includes details on the study (national or subnational)
tags <-
readxl::read_excel("studies_info.xlsx", sheet = "sample") %>%
dplyr::select(group = country, tag = "Geographic scope") %>%
dplyr::left_join(filter(ans, cat == "All"), by = "group") %>%
dplyr::mutate(tag = paste0(group, " (", tag, ", ", n, ")")) %>%
dplyr::select(group, tag)
# Prepare df to plot. Important but ugly relevel of factors, happening all over the code
ans %<>%
dplyr::left_join(tags) %>%
dplyr::mutate(tag = ifelse(group == "All", "All LMICs", tag)) %>%
# group_by(var) %>%
# arrange(cat) %>%
dplyr::mutate(
var = factor(var, levels = c("All", "By gender", "By education", "By age")),
cat = factor(
cat, ordered = TRUE,
levels = rev(c(c("Female", "Male", "Up to Secondary",
"> Secondary", "<55", "55+", "All"))),
labels = rev(c("Female", "Male", "Up to Secondary",
"More than Secondary", "$< 55$", "$55 +$", "All"))),
tag = gsub(pattern = " \\(", "\\\n\\(", tag))
special_cases <-
sort(unique(ans$tag)[grep(unique(ans$tag), pattern = "All LMICs|Russia|USA")])
ans %<>%
dplyr::mutate(
tag =
factor(x = tag, ordered = TRUE,
levels = rev(c(sort(unique(tag)[!(unique(tag) %in% special_cases)]), special_cases))))
#Colour blind palette (available palletes are smaller so we expand it)
safe_colorblind_palette <- c("#CC6677", "#DDCC77", "#117733", "#332288", "#AA4499",
"#44AA99", "#999933", "#882255", "#661100", "#6699CC", "#888888",
"#88CCEE")
#Plot
fig_1 <-
ans %>%
ggplot(data = ., aes(x = tag, y = estimate, color = cat)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
size = .5, width = .2, position = position_dodge(0.6)) +
geom_point(position = position_dodge(0.6)) +
facet_grid(. ~ var, scales = "free_x", space = "free") +
coord_flip() +
guides(color = guide_legend(reverse = TRUE, nrow = 2)) +
geom_vline(xintercept = 3.5, color = "darkgrey") +
geom_vline(xintercept = 2.5, color = "darkgrey") +
scale_colour_manual(values = safe_colorblind_palette) +
labs(title = "If a COVID-19 vaccine becomes available in [country], would you take it?",
color = "Subgroups", x = "") +
theme_bw(base_size = (base_font_size - 2)) + ylim(c(0,100)) +
theme(legend.position = "bottom",
plot.caption = element_text(hjust = 0), #Default is hjust=1
plot.title.position = "plot", #NEW parameter. Apply for subtitle too.
plot.caption.position =  "plot",
axis.text.y = element_text(hjust = 0))
fig_1
# Analysis of differences in means only LMICs
# Notice that Uganda 1 is dropped, because of it does not have reference categories for gender or age
# Notice that we are using df (and not df2) as data, since it does not include "All"
# Population estimate (clustering on country)
differences_means_gen_age <-
lapply(c("gender", "age_groups_binary"), function(i) {
df %>%
dplyr::filter(country != "USA" & country != "Russia" & country != "Uganda 1") %>%
dplyr::filter(if_all(c(all_of(i), all_of("take_vaccine_num")), ~ !is.na(.))) %>%
country_weighting() %>%
estimatr::lm_robust(as.formula(paste("take_vaccine_num ~", i)),
fixed_effects = ~country,
weight = weight,
cluster = country,
se_type = "stata",
data = .) %>%
tidy %>%
dplyr::select(estimate, std.error, p.value, df, term)
}) %>%
dplyr::bind_rows(.)
differences_means_educ <-
df %>%
dplyr::filter(country != "USA" & country != "Russia") %>%
dplyr::filter(if_all(c(all_of("educ_binary"), all_of("take_vaccine_num")), ~ !is.na(.))) %>%
country_weighting() %>%
estimatr::lm_robust(
take_vaccine_num ~educ_binary,
fixed_effects = ~country,
weight = weight,
cluster = country,
se_type = "stata",
data = .) %>%
tidy %>%
dplyr::select(estimate, std.error, p.value, df, term)
dif_gender <-
differences_means_gen_age %>%
dplyr::filter(term == "genderMale") %>%
pull(estimate) %>%
{. * 100} %>%
round(., 1)
dif_age <-
differences_means_gen_age %>%
dplyr::filter(term == "age_groups_binary55+") %>%
pull(estimate) %>%
{. * 100} %>%
round(., 1)
dif_educ <-
differences_means_educ %>%
dplyr::filter(term == "educ_binaryUp to Secondary") %>%
pull(estimate) %>%
{. * 100} %>%
round(., 1)
diffmeans <-
rbind(differences_means_gen_age, differences_means_educ) %>%
dplyr::rename(Estimate = estimate,
Std.error = std.error,
P.value = p.value,
"Degrees of freedom" = df,
"Baseline category" = term) %>%
dplyr::mutate(
Variable = ifelse(`Baseline category` == "genderMale",
"Gender", ""),
Variable = ifelse(`Baseline category` == "age_groups_binary55+",
"Age", Variable),
Variable = ifelse(`Baseline category` == "educ_binaryUp to Secondary",
"Education", Variable),
`Baseline category` = ifelse(`Baseline category` == "genderMale",
"Male", `Baseline category`),
`Baseline category` = ifelse(`Baseline category` == "age_groups_binary55+",
"55+", `Baseline category`),
`Baseline category` = ifelse(`Baseline category` == "educ_binaryUp to Secondary",
"Up to secondary", `Baseline category`))
dmeans <- diffmeans %>%
knitr::kable(
digits = 2,
caption =  "Differences in means",
format = "latex", booktabs = T, linesep = "", label = "dmeans", align = "c") %>%
kableExtra::kable_styling(latex_options = c("hold_position"),
font_size = base_font_size - 2, full_width = FALSE) %>%
kableExtra::row_spec(0, bold = TRUE) %>%
kableExtra::footnote(
general_title = "",
general = "Table 8 shows the results of subgroup mean differences. Subgroup differences were generated considering only LMICs. The differences in means for gender and age do not include the Uganda 1 study, which only included female respondents under the age of 55.",
threeparttable = T)
diffmeans %>%
knitr::kable(
caption =  "Differences in means",
booktabs = T, linesep = "", label = "dmeans", digits = 2)
country_differences <-
unique(df$country) %>%
lapply(function(j){{
dff <- filter(df, country == j)
lapply(c("gender", "age_groups_binary", "educ_binary"), function(i){
if (length(table(dff[[i]])) != 2)  {
return(NULL)
} else {
estimatr::lm_robust(as.formula(paste("take_vaccine_num ~", i)),
weight = weight,
data = dff) %>%
tidy %>%
dplyr::select(estimate, std.error, p.value, df, term)}}
) } %>%
dplyr::bind_rows() %>%
dplyr::mutate(country = j)}) %>%
dplyr::bind_rows() %>%
dplyr::arrange(term, country) %>%
dplyr::relocate(country, term) %>%
dplyr::filter(term != "(Intercept)") %>%
dplyr::mutate(significant = p.value <= .05)
country_differences_summary <-
country_differences %>%
dplyr::filter(!(country %in% c("Russia", "USA"))) %>%
dplyr::group_by(term) %>% summarize(
"positive " = sum(estimate > 0),
"positive and significant" = sum(estimate > 0 & significant),
"negative and significant" = sum(estimate < 0 & significant),
"not significant" = sum(!significant),
n = n())
knitr::kable(country_differences,
digits = 2, caption = "Differences between groups within studies ")
knitr::kable(country_differences_summary,
digits = 2, caption = "Differences between groups within studies (Summary)")
# Metaplus (variance between countries, included in text)
mp <- metaplus::metaplus(
yi  = main_results %>% filter(!(group %in% c("USA", "Russia", "All"))) %>% pull(estimate),
sei = main_results %>% filter(!(group %in% c("USA", "Russia", "All"))) %>% pull(std.error))
mp_tau =  mp$results[2,1]
mp$results %>% kable(caption = "Metaplus  results")
# Mean of LMICs
ans_mean <-
ans %>%
dplyr::filter(cat == "All", group == "All") %>%
pull(estimate)
# Lowest and highest bounds for All mean estimate
ans_mean_low <-
ans %>%
dplyr::filter(cat == "All", group == "All") %>%
pull(conf.low)
ans_mean_high <-
ans %>%
dplyr::filter(cat == "All", group == "All") %>%
pull(conf.high)
# df of LMICs (no USA, Russia or All)
ans_stats <-
ans %>%
dplyr::filter(cat == "All", !(group %in% c("USA", "Russia", "All")))
# Median of LMICs
ans_median <- median(ans_stats$estimate)
# Interquartile range of LMIcs
ans_iqr <- IQR(ans_stats$estimate)
# Smallest and biggest acceptability of LMICs
ans_min <-
ans %>%
dplyr::filter(cat == "All" & group != "Russia" & group != "USA") %>%
pull(estimate) %>% min
ans_max <-
ans %>%
dplyr::filter(cat == "All" & group != "Russia" & group != "USA") %>%
pull(estimate) %>% max
# Rank by estimate
top_all <-
ans %>%
dplyr::filter(cat == "All") %>%
dplyr::arrange(desc(estimate))
bottom_all <-
ans %>%
dplyr::filter(cat == "All" & group != "Russia" & group != "USA") %>%
dplyr::arrange(estimate)
# USA and Russia estimate acceptability
usa_ans <-
ans %>%
dplyr::filter(cat == "All" & group == "USA")
rus_ans <-
ans %>%
dplyr::filter(cat == "All" & group == "Russia")
# Here we are making "percentages" from the estimates and putting them together with confidence intervals
# Also we are going from long to wide
main_table <-
main_results %>%
dplyr::mutate(
across(c(estimate, conf.low, conf.high), list("_main" = ~ format(round(100 * ., 1), nsmall = 1))),
conf_int__main = paste0("(", conf.low__main, ", ", conf.high__main, ")")) %>%
dplyr::select(group, estimate__main, conf_int__main)
gender_table <-
acc_by_gender %>%
dplyr::mutate(
across(c(estimate, conf.low, conf.high), ~ format(round(100 * ., 1), nsmall = 1)),
conf_int = paste0("(", conf.low, ", ", conf.high, ")")) %>%
dplyr::select(group, gender, estimate, conf_int) %>%
tidyr::pivot_wider(names_from = gender,
values_from = c(estimate, conf_int),
names_sep = "__")
educ_table <-
acc_by_educ_binary %>%
dplyr::mutate(
across(c(estimate, conf.low, conf.high), ~ format(round(100 * ., 1), nsmall = 1)),
conf_int = paste0("(", conf.low, ", ", conf.high, ")")) %>%
dplyr::select(group, educ_binary, estimate, conf_int) %>%
tidyr::pivot_wider(names_from = educ_binary,
values_from = c(estimate, conf_int),
names_sep = "__")
age_table <-
acc_by_age_binary %>%
dplyr::mutate(
across(c(estimate, conf.low, conf.high), ~ format(round(100 * ., 1), nsmall = 1)),
conf_int = paste0("(", conf.low, ", ", conf.high, ")")) %>%
dplyr::select(group, age_groups_binary, estimate, conf_int) %>%
tidyr::pivot_wider(names_from = age_groups_binary,
values_from = c(estimate, conf_int),
names_sep = "__")
all_tables <-
main_table %>%
dplyr::left_join(gender_table) %>%
dplyr::left_join(educ_table) %>%
dplyr::left_join(age_table) %>%
dplyr::select(group, everything()) %>%
dplyr::mutate(group = as.factor(group),
group = forcats::fct_relevel(group, "All", "Russia", "USA", after = Inf)) %>%
dplyr::arrange(group) %>%
tidyr::pivot_longer(cols = c(starts_with("estimate__"), starts_with("conf_int__")),
names_to = c("type", ".value"),
names_pattern = "(.*)__(.*)") %>%
dplyr::mutate(group = ifelse(type == "conf_int", "", as.character(group)),
group = ifelse(group == "All", "All LMICs", group)) %>%
dplyr::select(-type) %>%
dplyr::rename("Country" = "group",
"Average acceptability" = "main")
tab_fig1 <-
all_tables %>%
knitr::kable(
all_tables,
caption = "If a COVID-19 vaccine becomes available in [country], would you take it? Disaggregated by subgroups",
format = "latex",  booktabs = T, linesep = "",
format.args = list(big.mark = ",", scientific = FALSE),
escape = F, align = "lccccccc", label = "maintabledis")  %>%
kableExtra::kable_styling(latex_options = c("scale_down", "hold_position"),
font_size = base_font_size - 2, full_width = FALSE) %>%
kableExtra::add_header_above(c("", "", "Gender" = 2, "Education" = 2, "Age" = 2), bold = TRUE) %>%
kableExtra::row_spec(0, bold = TRUE) %>%
kableExtra::footnote(
general_title = "",
general = "Table 4 shows percentage of respondents willing to take the COVID-19 vaccine as plotted in Figure 1. A 95% confidence interval is shown between parentheses",
threeparttable = T)
all_tables %>%
knitr::kable(
caption = "If a COVID-19 vaccine becomes available in [country], would you take it? Disaggregated by subgroups",
align = "lccccccc", booktabs = T)
library(knitr)
knitr::opts_chunk$set(echo = FALSE)
googledrive::drive_download(file = "NatureMedicine Covid vaccine hesitancy",
path = "paper_supplementary_files/Intro Vaccine.txt", overwrite = TRUE)
file.rename(from = "paper_supplementary_files/Intro Vaccine.txt",
to = "paper_supplementary_files/temp_download.Rmd")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
if (!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, magrittr, knitr, kableExtra, DT, lazyeval,
labelled, forcats, readxl, googledrive, estimatr, ggforce, fastDummies,
stringr, RColorBrewer, readstata13, metaplus, sjlabelled, ggrepel, tikzDevice)
options(knitr.kable.NA = '.')
base_font_size <- 12
# The helper renormalizes weights so that each study gets the
# same total weight even if they are missing data
country_weighting <- function(data)
data %>%
dplyr::group_by(country) %>%
dplyr::mutate(weight = weight/sum(weight)) %>%
dplyr::ungroup()
lm_helper <- function(data,...) {
data %>%
country_weighting() %>%
estimatr::lm_robust(data = .,...) %>%
{bind_cols( tidy(.), n = nobs(.) )}
}
# Subgroup analysis : Function to apply analysis function over groups
grp_analysis <- function(df, y, x)
df %>%
dplyr::filter(if_all(c(all_of(x), all_of(y), cluster, weight), ~ !is.na(.))) %>%
dplyr::nest_by(group, get(x)) %>%
dplyr::summarize(
lm_helper(data = data,
formula = as.formula(paste0(y, "~ 1")), cluster = cluster,
weight = weight, se_type = "stata"), .groups = "drop") %>%
dplyr::rename(!!x := "get(x)")
# Reasons analysis: Function to apply analysis function over groups
reasons_together <- function(df, reason, num = "Yes")
df %>%
dplyr::filter(take_vaccine %in% num,
if_all(c(all_of(reason), cluster, weight), ~ !is.na(.))) %>%
dplyr::nest_by(group) %>%
dplyr::summarize(
lm_helper(data = data,
formula = as.formula(paste0(reason, "~ 1")),
cluster = cluster,
weight = weight, se_type = "stata"), .groups = "drop")
reasons_together_subgroup <- function(df, reason, num = "Yes",
dem_group = NA, dem_subgroup = NA){
if (dem_group == "gender")
df <- filter(df, gender %in% dem_subgroup)
df %>%
dplyr::filter(take_vaccine %in% num,
!is.na(get(reason))) %>%
dplyr::nest_by(group) %>%
dplyr::summarize(
lm_helper(data = data,
formula = as.formula(paste0(reason, "~ 1")), cluster = cluster,
weight = weight, se_type = "stata"), .groups = "drop")
}
# Call data created in 1_cleaning.Rmd
df <- readr::read_csv("3_rep_data/combined.csv", guess_max = 30000)
# If no cluster information given for a study then individuals are clusters
# Ensure cluster ids are distinct across studies
df <-
df %>%
dplyr::group_by(study) %>%
dplyr::mutate(
cluster = ifelse(is.na(cluster), paste(1:n()), cluster),
cluster = paste0(gsub(" ", "_", tolower(country)), "_", cluster))
# Weights sum to 1 in each study and recode age and education into binary bins
df <-
df %>%
dplyr::group_by(study) %>%
dplyr::mutate(
weight_replace = mean(weight, rm.na = TRUE),
weight = if_else(is.na(weight), if_else(is.na(weight_replace), 1, weight_replace), weight),
weight = weight/sum(weight)) %>%
dplyr::ungroup() %>%
dplyr::mutate(
age_groups = as.character(cut(x = age, breaks = c(-Inf, 18, 30, 45, 60, +Inf), right = F)),
age_groups_binary = ifelse(age >= 55, "55+", "<55"),
educ_binary = if_else(educ == "More than secondary", "> Secondary", "Up to Secondary"))
# We create a new dataframe with countries and with "All" (only LMICs). Countries are clusters in "All" analysis
# USA and Russia excluded from "All" set
df2 <-
dplyr::bind_rows(
mutate(df, group = country),
mutate(filter(df, country != "USA" & country != "Russia"), group = "All")) %>%
mutate(
cluster = if_else(group == "All",
gsub(pattern = " ", replacement = "_", x = tolower(country)),
cluster))
df %>% group_by(country) %>%
summarize(n = n(),
sd_wt = sd(weight, na.rm = TRUE)/mean(weight, na.rm = TRUE),
cl_size = n()/length(unique(cluster)),
take_1 = mean((take_vaccine == "Yes")[take_vaccine == "Yes" | take_vaccine == "No" ], na.rm = TRUE),
take_2 = mean((take_vaccine == "Yes"), na.rm = TRUE),
take_3 = mean(take_vaccine_num, na.rm = TRUE),
take_dk = mean(take_vaccine == "DK"),
.take = mean(is.na(take_vaccine_num)), .age = mean(is.na(age)),
.gender = mean(is.na(gender)), .educ = mean(is.na(educ))) %>%
kable(digits = 2,
caption = "Observations, missingness patterns, data structure. Column .var is the share missing for variable var.", booktabs = TRUE, linesep = "", format.args = list(big.mark = ",",
scientific = FALSE))
nas <- df %>% group_by(country) %>%
summarize(n = n(),
take_vaccine_na = mean(!is.na(take_vaccine)),
gender_na = mean(is.na(gender)),
educ_na= mean(is.na(educ)),
age_na= mean(is.na(age))) %>%
kable(digits = 2,
col.names= c("Country", "N obs", "Take vaccine", "Gender", "Education", "Age"),
caption = "Observations and missingness patterns",
booktabs = TRUE, linesep = "",
format.args = list(big.mark = ",", scientific = FALSE),
format = "latex") %>%
kableExtra::kable_styling(font_size = base_font_size - 2, full_width = FALSE) %>%
kableExtra::footnote(
general_title = "",
general = "Table 9 show the percentage of observations that are not missing values for each variable included in Figure 1.",
threeparttable = T)
df %>% group_by(country) %>%
summarize(n = n(),
take_vaccine_na = mean(!is.na(take_vaccine)),
gender_na = mean(is.na(gender)),
educ_na= mean(is.na(educ)),
age_na= mean(is.na(age))) %>%
kable(digits = 2,
col.names= c("Country", "N obs", "Take vaccine", "Gender", "Education", "Age"),
caption = "Observations and missingness patterns.",
linesep = "",
format.args = list(big.mark = ",", scientific = FALSE),
format = "html") %>%
kableExtra::kable_styling(full_width = FALSE) %>%
kableExtra::footnote(
general_title = "",
general = "Table 9 show the percentage of observations that are not missing values for each variable included in Figure 1.",
threeparttable = T)
df %>%
select(country, age) %>%
gather(category, value, -country) %>%
mutate(value = as.numeric(value)) %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~country, ncol = 3)
df %>%
select(country, gender, educ) %>%
gather(category, value, -country) %>%
ggplot(aes(value)) +  geom_bar() + facet_grid(country ~ category, scales = "free")
authors <-
readxl::read_excel("authors.xlsx")  %>%
knitr::kable(
caption =  "Authors",
format = "latex", booktabs = T, linesep = "", label = "sampling") %>%
kableExtra::kable_styling(latex_options = c("scale_down"),
font_size = base_font_size - 2) %>%
kableExtra::row_spec(0, bold = TRUE) %>%
kableExtra::column_spec(1, width = "8em") %>%
kableExtra::column_spec(2, width = "12em")  %>%
kableExtra::column_spec(3, width = "18em")
authors
df %>%
select(country, gender, educ)
df %>%
select(country, gender, educ) %>%
gather(category, value, -country)
df %>%
select(country, gender, educ)

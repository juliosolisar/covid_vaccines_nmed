round(., 1)
dif_age <-
differences_means_gen_age %>%
dplyr::filter(term == "age_groups_binary55+") %>%
pull(estimate) %>%
{. * 100} %>%
round(., 1)
dif_educ <-
differences_means_educ %>%
dplyr::filter(term == "educ_binaryUp to Secondary") %>%
pull(estimate) %>%
{. * 100} %>%
round(., 1)
diffmeans <-
rbind(differences_means_gen_age, differences_means_educ) %>%
dplyr::rename(Estimate = estimate,
Std.error = std.error,
P.value = p.value,
"Degrees of freedom" = df,
"Baseline category" = term) %>%
dplyr::mutate(
Variable = ifelse(`Baseline category` == "genderMale",
"Gender", ""),
Variable = ifelse(`Baseline category` == "age_groups_binary55+",
"Age", Variable),
Variable = ifelse(`Baseline category` == "educ_binaryUp to Secondary",
"Education", Variable),
`Baseline category` = ifelse(`Baseline category` == "genderMale",
"Male", `Baseline category`),
`Baseline category` = ifelse(`Baseline category` == "age_groups_binary55+",
"55+", `Baseline category`),
`Baseline category` = ifelse(`Baseline category` == "educ_binaryUp to Secondary",
"Up to secondary", `Baseline category`))
dmeans <- diffmeans %>%
knitr::kable(
digits = 2,
caption =  "Differences in means",
format = "latex", booktabs = T, linesep = "", label = "dmeans", align = "c") %>%
kableExtra::kable_styling(latex_options = c("hold_position"),
font_size = base_font_size - 2, full_width = FALSE) %>%
kableExtra::row_spec(0, bold = TRUE) %>%
kableExtra::footnote(
general_title = "",
general = "Table 8 shows the results of subgroup mean differences. Subgroup differences were generated considering only LMICs. The differences in means for gender and age do not include the Uganda 1 study, which only included female respondents under the age of 55.",
threeparttable = T)
diffmeans %>%
knitr::kable(
caption =  "Differences in means",
booktabs = T, linesep = "", label = "dmeans", digits = 2)
country_differences <-
unique(df$country) %>%
lapply(function(j){{
dff <- filter(df, country == j)
lapply(c("gender", "age_groups_binary", "educ_binary"), function(i){
if (length(table(dff[[i]])) != 2)  {
return(NULL)
} else {
estimatr::lm_robust(as.formula(paste("take_vaccine_num ~", i)),
weight = weight,
data = dff) %>%
tidy %>%
dplyr::select(estimate, std.error, p.value, df, term)}}
) } %>%
dplyr::bind_rows() %>%
dplyr::mutate(country = j)}) %>%
dplyr::bind_rows() %>%
dplyr::arrange(term, country) %>%
dplyr::relocate(country, term) %>%
dplyr::filter(term != "(Intercept)") %>%
dplyr::mutate(significant = p.value <= .05)
country_differences_summary <-
country_differences %>%
dplyr::filter(!(country %in% c("Russia", "USA"))) %>%
dplyr::group_by(term) %>% summarize(
"positive " = sum(estimate > 0),
"positive and significant" = sum(estimate > 0 & significant),
"negative and significant" = sum(estimate < 0 & significant),
"not significant" = sum(!significant),
n = n())
knitr::kable(country_differences,
digits = 2, caption = "Differences between groups within studies ")
knitr::kable(country_differences_summary,
digits = 2, caption = "Differences between groups within studies (Summary)")
# Metaplus (variance between countries, included in text)
mp <- metaplus::metaplus(
yi  = main_results %>% filter(!(group %in% c("USA", "Russia", "All"))) %>% pull(estimate),
sei = main_results %>% filter(!(group %in% c("USA", "Russia", "All"))) %>% pull(std.error))
mp_tau =  mp$results[2,1]
mp$results %>% kable(caption = "Metaplus  results")
# Mean of LMICs
ans_mean <-
ans %>%
dplyr::filter(cat == "All", group == "All") %>%
pull(estimate)
# Lowest and highest bounds for All mean estimate
ans_mean_low <-
ans %>%
dplyr::filter(cat == "All", group == "All") %>%
pull(conf.low)
ans_mean_high <-
ans %>%
dplyr::filter(cat == "All", group == "All") %>%
pull(conf.high)
# df of LMICs (no USA, Russia or All)
ans_stats <-
ans %>%
dplyr::filter(cat == "All", !(group %in% c("USA", "Russia", "All")))
# Median of LMICs
ans_median <- median(ans_stats$estimate)
# Interquartile range of LMIcs
ans_iqr <- IQR(ans_stats$estimate)
# Smallest and biggest acceptability of LMICs
ans_min <-
ans %>%
dplyr::filter(cat == "All" & group != "Russia" & group != "USA") %>%
pull(estimate) %>% min
ans_max <-
ans %>%
dplyr::filter(cat == "All" & group != "Russia" & group != "USA") %>%
pull(estimate) %>% max
# Rank by estimate
top_all <-
ans %>%
dplyr::filter(cat == "All") %>%
dplyr::arrange(desc(estimate))
bottom_all <-
ans %>%
dplyr::filter(cat == "All" & group != "Russia" & group != "USA") %>%
dplyr::arrange(estimate)
# USA and Russia estimate acceptability
usa_ans <-
ans %>%
dplyr::filter(cat == "All" & group == "USA")
rus_ans <-
ans %>%
dplyr::filter(cat == "All" & group == "Russia")
# Here we are making "percentages" from the estimates and putting them together with confidence intervals
# Also we are going from long to wide
main_table <-
main_results %>%
dplyr::mutate(
across(c(estimate, conf.low, conf.high), list("_main" = ~ format(round(100 * ., 1), nsmall = 1))),
conf_int__main = paste0("(", conf.low__main, ", ", conf.high__main, ")")) %>%
dplyr::select(group, estimate__main, conf_int__main)
gender_table <-
acc_by_gender %>%
dplyr::mutate(
across(c(estimate, conf.low, conf.high), ~ format(round(100 * ., 1), nsmall = 1)),
conf_int = paste0("(", conf.low, ", ", conf.high, ")")) %>%
dplyr::select(group, gender, estimate, conf_int) %>%
tidyr::pivot_wider(names_from = gender,
values_from = c(estimate, conf_int),
names_sep = "__")
educ_table <-
acc_by_educ_binary %>%
dplyr::mutate(
across(c(estimate, conf.low, conf.high), ~ format(round(100 * ., 1), nsmall = 1)),
conf_int = paste0("(", conf.low, ", ", conf.high, ")")) %>%
dplyr::select(group, educ_binary, estimate, conf_int) %>%
tidyr::pivot_wider(names_from = educ_binary,
values_from = c(estimate, conf_int),
names_sep = "__")
age_table <-
acc_by_age_binary %>%
dplyr::mutate(
across(c(estimate, conf.low, conf.high), ~ format(round(100 * ., 1), nsmall = 1)),
conf_int = paste0("(", conf.low, ", ", conf.high, ")")) %>%
dplyr::select(group, age_groups_binary, estimate, conf_int) %>%
tidyr::pivot_wider(names_from = age_groups_binary,
values_from = c(estimate, conf_int),
names_sep = "__")
all_tables <-
main_table %>%
dplyr::left_join(gender_table) %>%
dplyr::left_join(educ_table) %>%
dplyr::left_join(age_table) %>%
dplyr::select(group, everything()) %>%
dplyr::mutate(group = as.factor(group),
group = forcats::fct_relevel(group, "All", "Russia", "USA", after = Inf)) %>%
dplyr::arrange(group) %>%
tidyr::pivot_longer(cols = c(starts_with("estimate__"), starts_with("conf_int__")),
names_to = c("type", ".value"),
names_pattern = "(.*)__(.*)") %>%
dplyr::mutate(group = ifelse(type == "conf_int", "", as.character(group)),
group = ifelse(group == "All", "All LMICs", group)) %>%
dplyr::select(-type) %>%
dplyr::rename("Country" = "group",
"Average acceptability" = "main")
tab_fig1 <-
all_tables %>%
knitr::kable(
all_tables,
caption = "If a COVID-19 vaccine becomes available in [country], would you take it? Disaggregated by subgroups",
format = "latex",  booktabs = T, linesep = "",
format.args = list(big.mark = ",", scientific = FALSE),
escape = F, align = "lccccccc", label = "maintabledis")  %>%
kableExtra::kable_styling(latex_options = c("scale_down", "hold_position"),
font_size = base_font_size - 2, full_width = FALSE) %>%
kableExtra::add_header_above(c("", "", "Gender" = 2, "Education" = 2, "Age" = 2), bold = TRUE) %>%
kableExtra::row_spec(0, bold = TRUE) %>%
kableExtra::footnote(
general_title = "",
general = "Table 4 shows percentage of respondents willing to take the COVID-19 vaccine as plotted in Figure 1. A 95% confidence interval is shown between parentheses",
threeparttable = T)
all_tables %>%
knitr::kable(
caption = "If a COVID-19 vaccine becomes available in [country], would you take it? Disaggregated by subgroups",
align = "lccccccc", booktabs = T)
library(knitr)
knitr::opts_chunk$set(echo = FALSE)
googledrive::drive_download(file = "NatureMedicine Covid vaccine hesitancy",
path = "paper_supplementary_files/Intro Vaccine.txt", overwrite = TRUE)
file.rename(from = "paper_supplementary_files/Intro Vaccine.txt",
to = "paper_supplementary_files/temp_download.Rmd")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
if (!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, magrittr, knitr, kableExtra, DT, lazyeval,
labelled, forcats, readxl, googledrive, estimatr, ggforce, fastDummies,
stringr, RColorBrewer, readstata13, metaplus, sjlabelled, ggrepel, tikzDevice)
options(knitr.kable.NA = '.')
base_font_size <- 12
# The helper renormalizes weights so that each study gets the
# same total weight even if they are missing data
country_weighting <- function(data)
data %>%
dplyr::group_by(country) %>%
dplyr::mutate(weight = weight/sum(weight)) %>%
dplyr::ungroup()
lm_helper <- function(data,...) {
data %>%
country_weighting() %>%
estimatr::lm_robust(data = .,...) %>%
{bind_cols( tidy(.), n = nobs(.) )}
}
# Subgroup analysis : Function to apply analysis function over groups
grp_analysis <- function(df, y, x)
df %>%
dplyr::filter(if_all(c(all_of(x), all_of(y), cluster, weight), ~ !is.na(.))) %>%
dplyr::nest_by(group, get(x)) %>%
dplyr::summarize(
lm_helper(data = data,
formula = as.formula(paste0(y, "~ 1")), cluster = cluster,
weight = weight, se_type = "stata"), .groups = "drop") %>%
dplyr::rename(!!x := "get(x)")
# Reasons analysis: Function to apply analysis function over groups
reasons_together <- function(df, reason, num = "Yes")
df %>%
dplyr::filter(take_vaccine %in% num,
if_all(c(all_of(reason), cluster, weight), ~ !is.na(.))) %>%
dplyr::nest_by(group) %>%
dplyr::summarize(
lm_helper(data = data,
formula = as.formula(paste0(reason, "~ 1")),
cluster = cluster,
weight = weight, se_type = "stata"), .groups = "drop")
reasons_together_subgroup <- function(df, reason, num = "Yes",
dem_group = NA, dem_subgroup = NA){
if (dem_group == "gender")
df <- filter(df, gender %in% dem_subgroup)
df %>%
dplyr::filter(take_vaccine %in% num,
!is.na(get(reason))) %>%
dplyr::nest_by(group) %>%
dplyr::summarize(
lm_helper(data = data,
formula = as.formula(paste0(reason, "~ 1")), cluster = cluster,
weight = weight, se_type = "stata"), .groups = "drop")
}
# Call data created in 1_cleaning.Rmd
df <- readr::read_csv("3_rep_data/combined.csv", guess_max = 30000)
# If no cluster information given for a study then individuals are clusters
# Ensure cluster ids are distinct across studies
df <-
df %>%
dplyr::group_by(study) %>%
dplyr::mutate(
cluster = ifelse(is.na(cluster), paste(1:n()), cluster),
cluster = paste0(gsub(" ", "_", tolower(country)), "_", cluster))
# Weights sum to 1 in each study and recode age and education into binary bins
df <-
df %>%
dplyr::group_by(study) %>%
dplyr::mutate(
weight_replace = mean(weight, rm.na = TRUE),
weight = if_else(is.na(weight), if_else(is.na(weight_replace), 1, weight_replace), weight),
weight = weight/sum(weight)) %>%
dplyr::ungroup() %>%
dplyr::mutate(
age_groups = as.character(cut(x = age, breaks = c(-Inf, 18, 30, 45, 60, +Inf), right = F)),
age_groups_binary = ifelse(age >= 55, "55+", "<55"),
educ_binary = if_else(educ == "More than secondary", "> Secondary", "Up to Secondary"))
# We create a new dataframe with countries and with "All" (only LMICs). Countries are clusters in "All" analysis
# USA and Russia excluded from "All" set
df2 <-
dplyr::bind_rows(
mutate(df, group = country),
mutate(filter(df, country != "USA" & country != "Russia"), group = "All")) %>%
mutate(
cluster = if_else(group == "All",
gsub(pattern = " ", replacement = "_", x = tolower(country)),
cluster))
df %>% group_by(country) %>%
summarize(n = n(),
sd_wt = sd(weight, na.rm = TRUE)/mean(weight, na.rm = TRUE),
cl_size = n()/length(unique(cluster)),
take_1 = mean((take_vaccine == "Yes")[take_vaccine == "Yes" | take_vaccine == "No" ], na.rm = TRUE),
take_2 = mean((take_vaccine == "Yes"), na.rm = TRUE),
take_3 = mean(take_vaccine_num, na.rm = TRUE),
take_dk = mean(take_vaccine == "DK"),
.take = mean(is.na(take_vaccine_num)), .age = mean(is.na(age)),
.gender = mean(is.na(gender)), .educ = mean(is.na(educ))) %>%
kable(digits = 2,
caption = "Observations, missingness patterns, data structure. Column .var is the share missing for variable var.", booktabs = TRUE, linesep = "", format.args = list(big.mark = ",",
scientific = FALSE))
nas <- df %>% group_by(country) %>%
summarize(n = n(),
take_vaccine_na = mean(!is.na(take_vaccine)),
gender_na = mean(is.na(gender)),
educ_na= mean(is.na(educ)),
age_na= mean(is.na(age))) %>%
kable(digits = 2,
col.names= c("Country", "N obs", "Take vaccine", "Gender", "Education", "Age"),
caption = "Observations and missingness patterns",
booktabs = TRUE, linesep = "",
format.args = list(big.mark = ",", scientific = FALSE),
format = "latex") %>%
kableExtra::kable_styling(font_size = base_font_size - 2, full_width = FALSE) %>%
kableExtra::footnote(
general_title = "",
general = "Table 9 show the percentage of observations that are not missing values for each variable included in Figure 1.",
threeparttable = T)
df %>% group_by(country) %>%
summarize(n = n(),
take_vaccine_na = mean(!is.na(take_vaccine)),
gender_na = mean(is.na(gender)),
educ_na= mean(is.na(educ)),
age_na= mean(is.na(age))) %>%
kable(digits = 2,
col.names= c("Country", "N obs", "Take vaccine", "Gender", "Education", "Age"),
caption = "Observations and missingness patterns.",
linesep = "",
format.args = list(big.mark = ",", scientific = FALSE),
format = "html") %>%
kableExtra::kable_styling(full_width = FALSE) %>%
kableExtra::footnote(
general_title = "",
general = "Table 9 show the percentage of observations that are not missing values for each variable included in Figure 1.",
threeparttable = T)
df %>%
select(country, age) %>%
gather(category, value, -country) %>%
mutate(value = as.numeric(value)) %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~country, ncol = 3)
df %>%
select(country, gender, educ) %>%
gather(category, value, -country) %>%
ggplot(aes(value)) +  geom_bar() + facet_grid(country ~ category, scales = "free")
authors <-
readxl::read_excel("authors.xlsx")  %>%
knitr::kable(
caption =  "Authors",
format = "latex", booktabs = T, linesep = "", label = "sampling") %>%
kableExtra::kable_styling(latex_options = c("scale_down"),
font_size = base_font_size - 2) %>%
kableExtra::row_spec(0, bold = TRUE) %>%
kableExtra::column_spec(1, width = "8em") %>%
kableExtra::column_spec(2, width = "12em")  %>%
kableExtra::column_spec(3, width = "18em")
authors
df %>%
select(country, gender, educ)
df %>%
select(country, gender, educ) %>%
gather(category, value, -country)
df %>%
select(country, gender, educ)
?lm?robust
?lm_robust
source("2_code/functions.R")
drive_download("studies_info", overwrite = TRUE)
knitr::opts_chunk$set(echo = FALSE)
if (!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, DT, knitr, lazyeval, labelled,
readxl, googledrive, kableExtra, estimatr,
ggforce, magrittr, RColorBrewer, readstata13,
metaplus, sjlabelled, purrr)
drive_download("studies_info", overwrite = TRUE)
authors <-
readxl::read_excel("authors.xlsx")  %>%
knitr::kable(
caption =  "Authors",
format = "latex", booktabs = T, linesep = "", label = "sampling") %>%
kableExtra::kable_styling(latex_options = c("scale_down"),
font_size = base_font_size - 2) %>%
kableExtra::row_spec(0, bold = TRUE) %>%
kableExtra::column_spec(1, width = "8em") %>%
kableExtra::column_spec(2, width = "12em")  %>%
kableExtra::column_spec(3, width = "18em")
authors <-
readxl::read_excel("authors.xlsx")
View(authors)
BCG  <-
readxl::read_xls("2/input_data/WHO_coverage_estimates_series.xls",sheet = "BCG") %>%
select(Cname,`2019`) %>% rename(BCG = "2019")
BCG  <-
readxl::read_xls("2_input_data/WHO_coverage_estimates_series.xls",sheet = "BCG") %>%
select(Cname,`2019`) %>% rename(BCG = "2019")
## Generates data from WGM
wgmdata <- readr::read_csv("2_input_data/wgm_2018_publiccsv.csv")
# recode the name of countries
ctries <- list("1" = "USA", "9" = "Pakistan",
"31" = "India", "35" = "Nigeria",
"41" = "Uganda", "63" = "Mozambique",
"65" = "Rwanda", "76" = "Russia",
"78" = "Burkina Faso", "80" = "Sierra Leone",
"105" = "Colombia", "157" = "Nepal")
wgmdata %<>%
# keep only these countries we have data for
dplyr::filter(WP5 %in% c(1,9,31,35,41,63,65,76,78,80,105,157)) %>%
dplyr::mutate(
country = purrr::map_chr(WP5, ~ ctries[[as.character(.x)]]),
# turn the variables into binary versions
importance_binary = 2 - cut(Q24,  breaks = c(-Inf, 2, 6), labels = FALSE),
safe_binary       = 2 - cut(Q25,  breaks = c(-Inf, 2, 6), labels = FALSE),
effective_binary  = 2 - cut(Q26,  breaks = c(-Inf, 2, 6), labels = FALSE),
cov_binary        = 2 - cut(Q28,  breaks = c(-Inf, 1, 3), labels = FALSE),
t_neigh           = 2 - cut(Q11A, breaks = c(-Inf, 2, 4), labels = FALSE),
t_gov             = 2 - cut(Q11B, breaks = c(-Inf, 2, 4), labels = FALSE),
t_scient          = 2 - cut(Q11C, breaks = c(-Inf, 2, 4), labels = FALSE),
t_jour            = 2 - cut(Q11D, breaks = c(-Inf, 2, 4), labels = FALSE),
t_doc             = 2 - cut(Q11E, breaks = c(-Inf, 2, 4), labels = FALSE),
t_ngo             = 2 - cut(Q11F, breaks = c(-Inf, 2, 4), labels = FALSE),
t_theal           = 2 - cut(Q11G, breaks = c(-Inf, 2, 4), labels = FALSE),
)
#compute rates
wgm_results <-
wgmdata %>%
dplyr::nest_by(country) %>%
dplyr::mutate(
modelimp = list(lm_robust(importance_binary ~ 1,
weight = wgt,
data = data, se_type = "stata")),
modelsaf = list(lm_robust(safe_binary ~ 1,
weight = wgt,
data = data, se_type = "stata")),
modeleff = list(lm_robust(effective_binary ~ 1,
weight = wgt,
data = data, se_type = "stata")),
modelcov = list(lm_robust(cov_binary ~ 1,
weight = wgt,
data = data, se_type = "stata")),
modelneigh = list(lm_robust(t_neigh ~ 1,
weight = wgt,
data = data, se_type = "stata")),
modelgov = list(lm_robust(t_gov ~ 1,
weight = wgt,
data = data, se_type = "stata")),
modelscient = list(lm_robust(t_scient ~ 1,
weight = wgt,
data = data, se_type = "stata")),
modeljour = list(lm_robust(t_jour ~ 1,
weight = wgt,
data = data, se_type = "stata")),
modeldoc = list(lm_robust(t_doc ~ 1,
weight = wgt,
data = data, se_type = "stata")),
modelngo = list(lm_robust(t_ngo ~ 1,
weight = wgt,
data = data, se_type = "stata")),
modeltheal = list(lm_robust(t_theal ~ 1,
weight = wgt,
data = data, se_type = "stata")))
#complete table
table_wgm <-
wgm_results %>%
summarize(tidy(modelimp)) %>%
mutate(estimate =
paste0(round(estimate*100, 0))
) %>%
select(estimate) %>%
rename(Important = estimate)
table_wgm <-
wgm_results %>%
summarize(tidy(modelsaf)) %>%
mutate(estimate =
paste0(round(estimate*100, 0))
) %>%
select(estimate) %>%
rename(Safety = estimate) %>%
left_join(table_wgm)
table_wgm <-
wgm_results %>%
summarize(tidy(modeleff)) %>%
mutate(estimate =
paste0(round(estimate*100, 0))
) %>%
select(estimate) %>%
rename(Effectiveness = estimate) %>%
left_join(table_wgm)
table_wgm <-
wgm_results %>%
summarize(tidy(modelcov)) %>%
mutate(estimate =
paste0(round(estimate*100, 0))
) %>%
select(estimate) %>%
rename(Coverage = estimate) %>%
left_join(table_wgm)
readr::write_csv(table_wgm, "3_rep_data/table_wgm.csv")
?drive_download
drive_download("studies_info", path="2_input_data/studies_info.xlsx", overwrite = TRUE)
